// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuestDAL;

namespace QuestDAL.Migrations
{
    [DbContext(typeof(QuestDbContext))]
    [Migration("20190905140226_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EntityModels.Model.CompanyEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<string>("Logo");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("EntityModels.Model.ImageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int?>("QuestId");

                    b.HasKey("Id");

                    b.HasIndex("QuestId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("EntityModels.Model.QuestEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int?>("CompanyId");

                    b.Property<string>("Description")
                        .HasColumnType("Text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("FearLevel");

                    b.Property<int>("HardLevel");

                    b.Property<int>("MaxPlayers");

                    b.Property<int>("MinAge");

                    b.Property<int>("MinPlayers");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<double>("Raiting");

                    b.Property<TimeSpan>("WalkTime");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Quests");
                });

            modelBuilder.Entity("EntityModels.Model.ImageEntity", b =>
                {
                    b.HasOne("EntityModels.Model.QuestEntity", "Quest")
                        .WithMany("Images")
                        .HasForeignKey("QuestId");
                });

            modelBuilder.Entity("EntityModels.Model.QuestEntity", b =>
                {
                    b.HasOne("EntityModels.Model.CompanyEntity", "Company")
                        .WithMany("Quest")
                        .HasForeignKey("CompanyId");
                });
#pragma warning restore 612, 618
        }
    }
}
